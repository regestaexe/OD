package com.openDams.bean;

// Generated 18-dic-2009 11.35.39 by Hibernate Tools 3.2.4.GA

/**
 * Relations generated by hbm2java
 */
public class Relations implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private RelationsId id;
	private RelationTypes relationTypes;
	private Records recordsByRefIdRecord1;
	private Records recordsByRefIdRecord2;
	private Integer relationOrder;
	private String note;
	private boolean asyncTask = true;
	private boolean alredyProcessed = false;
	public Relations() {
	}

	public Relations(RelationsId id, RelationTypes relationTypes,
			Records recordsByRefIdRecord1, Records recordsByRefIdRecord2,Integer relationOrder, String note) {
		this.id = id;
		this.relationTypes = relationTypes;
		this.recordsByRefIdRecord1 = recordsByRefIdRecord1;
		this.recordsByRefIdRecord2 = recordsByRefIdRecord2;
		this.relationOrder = relationOrder;
		this.note = note;
	}


	public RelationsId getId() {
		return this.id;
	}

	public void setId(RelationsId id) {
		this.id = id;
	}

	public RelationTypes getRelationTypes() {
		return this.relationTypes;
	}

	public void setRelationTypes(RelationTypes relationTypes) {
		this.relationTypes = relationTypes;
	}

	public Records getRecordsByRefIdRecord1() {
		return this.recordsByRefIdRecord1;
	}

	public void setRecordsByRefIdRecord1(Records recordsByRefIdRecord1) {
		this.recordsByRefIdRecord1 = recordsByRefIdRecord1;
	}

	public Records getRecordsByRefIdRecord2() {
		return this.recordsByRefIdRecord2;
	}

	public void setRecordsByRefIdRecord2(Records recordsByRefIdRecord2) {
		this.recordsByRefIdRecord2 = recordsByRefIdRecord2;
	}
	public Integer getRelationOrder() {
		return this.relationOrder;
	}

	public void setRelationOrder(Integer relationOrder) {
		this.relationOrder = relationOrder;
	}

	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	public boolean isAsynctask() {
		return asyncTask;
	}

	public void setAsynctask(boolean asyncTask) {
		this.asyncTask = asyncTask;
	}

	public boolean isAlredyProcessed() {
		return alredyProcessed;
	}

	public void setAlredyProcessed(boolean alredyProcessed) {
		this.alredyProcessed = alredyProcessed;
	}
}
